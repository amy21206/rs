ID,sample student solution,example student buggy code,"example personalized 
fixed solution","example paired
distractor correct line","example paired
distractor wrong line","Edit Distance
sample","Edit Distance
personalized","Edit
personalized
few","Similarity
sample","Similarity
personalized","Similarity
personalized
high"
1,"def get_temp_des(temp):
    if temp >= 90:
        return ""Too Hot!""
    elif temp >= 80:
        return ""Hot!""
    elif temp >= 65:
        return ""Great!""
    elif temp >= 32:
        return ""Cold!""
    else:
        return ""Too Cold!""","def get_temp_des(temp):
    if temp >= 90:
        return ""Too Hot!""
    if temp >= 80:
        return ""Hot!""
    if temp >= 65:
        return""Great!""
    if temp >= 32:
        return ""Cold!""
    if temp <32:
        return ""Too cold""","def get_temp_des(temp):
    if temp >= 90:
        return ""Too Hot!""
    if temp >= 80:
        return ""Hot!""
    if temp >= 65:
        return""Great!""
    if temp >= 32:
        return ""Cold!""
    if temp <32:
        return ""Too Cold!""",if temp >= 90:,if temp > 90,32,1,TRUE,0.86,0.98,TRUE
2,"def read_file(file):
    fh = open(file)
    lines = fh.readlines()
    fh.close()
    return lines","def read_file(file):
    with open(file,""r"") as f:
        liness = f.readlines()
    lines = list()
    for line in liness:   
        lines.append(line.strip())
    return(lines)","def read_file(file):
    with open(file,""r"") as f:
        liness = f.readlines()
    lines = []
    for line in liness:      
        lines.append(line)       
    f.close()
    return lines",fh.close(),fh.close,27,8,TRUE,0.56,0.88,TRUE
3,"def is_ascending(nums):
    if len(nums) < 2:
        return True
    else:
        for i in range(len(nums)-1):
            if nums[i] >= nums[i+1]:
                return False
        return True","def is_ascending(nums):
    if len(nums) <= 1:
        return True
    prev = nums[0]
    for i in range(1, len(nums)):
        curr = nums[i]
        if curr < prev:
            return False
    return True","def is_ascending(nums):
    if len(nums) <= 1:
        return True
    prev = nums[0]
    for i in range(1, len(nums)):
        curr = nums[i]
        prev = nums[i-1]
        if curr < prev:
            return False
    return True",if nums[i] > nums[i + 1]:,if nums[i] >= nums[i + 1]:,25,8,TRUE,0.74,0.93,TRUE