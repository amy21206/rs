version: '3.8'

services:

  author:
    build:
      context: ./projects/author_server
    image: registry.digitalocean.com/runestone-registry/rs-author
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 8114:8114
    command: uvicorn rsptx.author_server_api.main:app --host 0.0.0.0 --port 8114 --reload
    volumes:
      - ${BOOK_PATH}:/books
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DEV_DBURL=${DC_DEV_DBURL:-$DEV_DBURL}
      - DBURL=${DC_DBURL:-$DBURL}
      - RUNESTONE_PATH=/usr/src/app
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - redis

  worker:
    build: 
      context: ./projects/author_server
    image: registry.digitalocean.com/runestone-registry/rs-worker
    extra_hosts:
      - host.docker.internal:host-gateway
    command: celery -A rsptx.author_server_api.worker.celery worker
    volumes:
      - ${BOOK_PATH}:/books
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - RUNESTONE_PATH=/usr/src/app
      - DEV_DBURL=${DC_DEV_DBURL:-$DEV_DBURL}
      - DBURL=${DC_DBURL:-$DBURL}
      - WEB2PY_CONFIG=${SERVER_CONFIG}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - author
      - redis

  redis:
    image: redis:6-alpine

  jobe:
    build: 
      context: ./projects/jobe
    image: registry.digitalocean.com/runestone-registry/rs-jobe

  book:
    build: 
      context: ./projects/book_server
    image: registry.digitalocean.com/runestone-registry/rs-book
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 8111:8111
    command: uvicorn rsptx.book_server_api.main:app --host 0.0.0.0 --port 8111
    #command: tail -f /var/log/lastlog
    restart: always
    volumes:
      - ${BOOK_PATH}:/usr/books

    environment:
      - BOOK_PATH=/usr/books
      - SERVER_CONFIG=${SERVER_CONFIG}
      - RUNESTONE_HOST=${RUNESTONE_HOST}
      - RUNESTONE_PATH=/usr/src/app
      - REDIS_URI=redis://${REDIS_HOST}:6379/0
      # Note: host.docker.internal refers back to the host so we can just use a local instance
      # of postgresql
      - DEV_DBURL=${DC_DEV_DBURL:-$DEV_DBURL}
      - DBURL=${DC_DBURL:-$DBURL}
      - DOCKER_COMPOSE=1
      - JWT_SECRET=${JWT_SECRET}
      - UVICORN_WORKERS=${UVICORN_WORKERS:-2}
      - UVICORN_USER=www-data
      - UVICORN_GROUP=www-data
      - UVICORN_MAX_REQUESTS=5000
      - UVICORN_MAX_REQUESTS_JITTER=30
      - UVICORN_TIMEOUT=60
      - LOGIN_URL="/runestone/default/user"
      - WORKER_NAME=${HOSTNAME}
      
    links:
      - redis
      - jobe

  runestone:
      build: 
        context: ./projects/w2p_login_assign_grade
      image: registry.digitalocean.com/runestone-registry/rs-runestone
      extra_hosts:
        - host.docker.internal:host-gateway
      ports:
        - 8112:8112
      command: gunicorn --bind 0.0.0.0:8112 rsptx.web2py_server.wsgihandler:application

      #command: tail -f /var/log/lastlog
      restart: always
      volumes:
        - ${BOOK_PATH}:/usr/books

      environment:
        - BOOK_PATH=/usr/books
        - SERVER_CONFIG=${SERVER_CONFIG}
        - WEB2PY_CONFIG=${SERVER_CONFIG}
        - RUNESTONE_HOST=${RUNESTONE_HOST}
        - RUNESTONE_PATH=/usr/src/app
        - REDIS_URI=redis://${REDIS_HOST}:6379/0
        # Note: host.docker.internal refers back to the host so we can just use a local instance
        # of postgresql
        - DEV_DBURL=${DC_DEV_DBURL:-$DEV_DBURL}
        - DBURL=${DC_DBURL:-$DBURL}
        - LOAD_BALANCER_HOST=${LOAD_BALANCER_HOST}
        - JWT_SECRET=${JWT_SECRET}
        - WEB2PY_PRIVATE_KEY=${WEB2PY_PRIVATE_KEY}
        - EMAIL_SENDER="smtp.gmail.com:587"
        - EMAIL_SERVER=${EMAIL_SERVER}
        - EMAIL_LOGIN=${EMAIL_LOGIN}
        - SPACES_KEY=${SPACES_KEY}
        - SPACES_SECRET=${SPACES_SECRET}
        - GUNICORN_CMD_ARGS=${GUNICORN_CMD_ARGS}
      links:
        - redis
        - jobe

  assignment:
    build: 
      context: ./projects/assignment_server
    image: registry.digitalocean.com/runestone-registry/rs-assignment
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 8113:8113
    command: uvicorn rsptx.assignment_server_api.core:app --host 0.0.0.0 --port 8113
    #command: tail -f /var/log/lastlog
    restart: always
    volumes:
      - ${BOOK_PATH}:/usr/books

    environment:
      - BOOK_PATH=/usr/books
      - SERVER_CONFIG=${SERVER_CONFIG}
      - RUNESTONE_PATH=/usr/src/app
      - REDIS_URI=redis://${REDIS_HOST}:6379/0
      # Note: host.docker.internal refers back to the host so we can just use a local instance
      # of postgresql
      - DEV_DBURL=${DC_DEV_DBURL:-$DEV_DBURL}
      - DBURL=${DC_DBURL:-$DBURL}
      - DOCKER_COMPOSE=1
      - JWT_SECRET=${JWT_SECRET}
    links:
      - redis
      - jobe


  nginx:
    
    # Note we use context: ./ here so that the Dockerfile can copy from the components folder
    build: 
      context: ./
      dockerfile: projects/nginx/Dockerfile
    image: registry.digitalocean.com/runestone-registry/rs-nginx
    
    ports:
      - 80:80
      #- 443:443
    volumes:
      - ${BOOK_PATH}:/usr/books
    links:
      - runestone
      - book
      - assignment
      - author
